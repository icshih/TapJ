//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.12.15 at 11:45:54 AM CET 
//


package net.ivoa.xml.stc.stc_v1_30;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for spectralUnitType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="spectralUnitType">
 *   &lt;restriction base="{http://www.ivoa.net/xml/STC/stc-v1.30.xsd}unitType">
 *     &lt;enumeration value="Hz"/>
 *     &lt;enumeration value="kHz"/>
 *     &lt;enumeration value="MHz"/>
 *     &lt;enumeration value="GHz"/>
 *     &lt;enumeration value="m"/>
 *     &lt;enumeration value="mm"/>
 *     &lt;enumeration value="um"/>
 *     &lt;enumeration value="nm"/>
 *     &lt;enumeration value="Angstrom"/>
 *     &lt;enumeration value="eV"/>
 *     &lt;enumeration value="keV"/>
 *     &lt;enumeration value="MeV"/>
 *     &lt;enumeration value="GeV"/>
 *     &lt;enumeration value="TeV"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "spectralUnitType")
@XmlEnum
public enum SpectralUnitType {

    @XmlEnumValue("Hz")
    HZ("Hz"),
    @XmlEnumValue("kHz")
    K_HZ("kHz"),
    @XmlEnumValue("MHz")
    M_HZ("MHz"),
    @XmlEnumValue("GHz")
    G_HZ("GHz"),
    @XmlEnumValue("m")
    M("m"),
    @XmlEnumValue("mm")
    MM("mm"),
    @XmlEnumValue("um")
    UM("um"),
    @XmlEnumValue("nm")
    NM("nm"),
    @XmlEnumValue("Angstrom")
    ANGSTROM("Angstrom"),
    @XmlEnumValue("eV")
    E_V("eV"),
    @XmlEnumValue("keV")
    KE_V("keV"),
    @XmlEnumValue("MeV")
    ME_V("MeV"),
    @XmlEnumValue("GeV")
    GE_V("GeV"),
    @XmlEnumValue("TeV")
    TE_V("TeV");
    private final String value;

    SpectralUnitType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SpectralUnitType fromValue(String v) {
        for (SpectralUnitType c: SpectralUnitType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
