//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.12.15 at 11:45:54 AM CET 
//


package net.ivoa.xml.vodataservice.v1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ParamUse.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ParamUse">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="required"/>
 *     &lt;enumeration value="optional"/>
 *     &lt;enumeration value="ignored"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ParamUse")
@XmlEnum
public enum ParamUse {


    /**
     * 
     *                   the parameter is required for the application or
     *                   service to work properly.  
     *                
     * 
     */
    @XmlEnumValue("required")
    REQUIRED("required"),

    /**
     * 
     *                   the parameter is optional but supported by the application or
     *                   service.
     *                
     * 
     */
    @XmlEnumValue("optional")
    OPTIONAL("optional"),

    /**
     * 
     *                   the parameter is not supported and thus is ignored by the 
     *                   application or service.
     *                
     * 
     */
    @XmlEnumValue("ignored")
    IGNORED("ignored");
    private final String value;

    ParamUse(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ParamUse fromValue(String v) {
        for (ParamUse c: ParamUse.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
